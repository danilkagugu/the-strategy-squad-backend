{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Aqua Track",
    "description": "Developed by The Strategy Squad",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://the-strategy-squad-backend.onrender.com/api" },
    { "url": "http://localhost:3030/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google registration and login",
        "security": [{ "google_auth": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/refreshing": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh tokens",
        "parameters": [],
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Refresh token is missing or invalid",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/password/send/email": {
      "post": {
        "tags": ["Users"],
        "summary": "Send email to update user's password",
        "parameters": [],
        "requestBody": {
          "description": "Send email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invalid email",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/password/save": {
      "post": {
        "tags": ["Users"],
        "summary": "Update user's password",
        "parameters": [],
        "requestBody": {
          "description": "Update password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "User unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": ["Users"],
        "summary": "Get amount of users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": ["Water"],
        "summary": "Create a record about a portion of water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Create water portion object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaterRecordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWaterRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      }
    },
    "/water/{id}": {
      "put": {
        "tags": ["Water"],
        "summary": "Update a record about a portion of water",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update water portion object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaterRecordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWaterRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Water"],
        "summary": "Delete a record about a portion of water",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWaterRecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": ["Water"],
        "summary": "Get records about water for a day",
        "parameters": [
          {
            "in": "query",
            "name": "day"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRecordsByDayResponse"
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Water"],
        "summary": "Get records about water for a Month",
        "parameters": [
          {
            "in": "query",
            "name": "month"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRecordsByMonthResponse"
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "repeatPassword"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "repeatPassword": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "66747d01942a774be18d98c6"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NzRiNmY3NTRjZTY3OTg3ODRhNTE3OCIsImlhdCI6MTcxODkyNTc1NCwiZXhwIjoxNzE5MDA4NTU0fQ.MNp-9FSDv4eFVAXBIzIjG2Q_43-8J68vI057-MEiicg"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2YyZjJlMmQxMTdlOGJiMjJjMzc4ZSIsImlhdCI6MTcxOTg1MjM2OCwiZXhwIjoxNzE5OTM1MTY4fQ.kd7vTp_ZLdBUcyZqmj40gEvS-xvtETgLjCfdyKKQmJk"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "Username"
              },
              "waterNorm": { "type": "integer", "description": "Water norm" },
              "weight": { "type": "integer", "description": "User's weight" },
              "timeActive": {
                "type": "number",
                "description": "Time of user's phisical activity"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url"
              },
              "gender": { "type": "string", "description": "Gender" }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "Username"
          },
          "waterNorm": { "type": "integer", "description": "Water norm" },
          "weight": { "type": "integer", "description": "User's weight" },
          "timeActive": {
            "type": "number",
            "description": "Time of user's phisical activity"
          },
          "avatarURL": { "type": "string", "description": "User's avatar url" },
          "gender": { "type": "string", "description": "Gender" }
        }
      },
      "CreateWaterRecordRequest": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time",
            "format": "YYYY-MM-DD-HH:MM",
            "example": "2024-06-22-14:50"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of water",
            "format": "1 to 5000 ml",
            "example": "100"
          }
        }
      },
      "CreateWaterRecordResponse": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time",
            "example": "2024-06-22-12:50"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of water",
            "example": "100"
          },
          "owner": {
            "type": "string",
            "description": "Owner's id",
            "example": "6677396cfe1fd29932b058f5"
          },
          "_id": {
            "type": "string",
            "description": "Object's id",
            "example": "6677396cfe1fd29932b058f5"
          },
          "createdAt": {
            "type": "string",
            "description": "Object's id",
            "example": "2024-06-22T20:51:56.759Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Object's id",
            "example": "2024-06-22T20:51:56.759Z"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "Username",
            "example": "Yura"
          },
          "waterNorm": {
            "type": "integer",
            "description": "Water norm",
            "example": "1800"
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": "120"
          },
          "timeActive": {
            "type": "number",
            "description": "Time of user's phisical activity",
            "example": "2.5"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar"
          },
          "gender": { "type": "string", "description": "Gender" }
        }
      },
      "SendEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email sent",
            "example": "check your email to update password"
          }
        }
      },
      "SendEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "New password",
            "example": "1f2d!456fg"
          },
          "token": {
            "type": "string",
            "description": "Temporary token from url params",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2YyZjJlMmQxMTdlOGJiMjJjMzc4ZSIsImlhdCI6MTcxOTg1MjM2OCwiZXhwIjoxNzE5OTM1MTY4fQ.kd7vTp_ZLdBUcyZqmj40gEvS-xvtETgLjCfdyKKQmJk"
          }
        }
      },
      "refreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2YyZjJlMmQxMTdlOGJiMjJjMzc4ZSIsImlhdCI6MTcxOTg1MjM2OCwiZXhwIjoxNzE5OTM1MTY4fQ.kd7vTp_ZLdBUcyZqmj40gEvS-xvtETgLjCfdyKKQmJk"
          }
        }
      },
      "refreshTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2YyZjJlMmQxMTdlOGJiMjJjMzc4ZSIsImlhdCI6MTcxOTg1MjQ1NywiZXhwIjoxNzE5ODU2MDU3fQ.8fy11E8KljboZZP7MY8aeV-b4WASHbv79B9zeFz6XMc"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2N2YyZjJlMmQxMTdlOGJiMjJjMzc4ZSIsImlhdCI6MTcxOTg1MjM2OCwiZXhwIjoxNzE5OTM1MTY4fQ.kd7vTp_ZLdBUcyZqmj40gEvS-xvtETgLjCfdyKKQmJk"
          }
        }
      },
      "WaterRecordsByDayResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "description": "Time",
                  "example": "2024-06-22-12:50"
                },
                "amount": {
                  "type": "integer",
                  "description": "Amount of water",
                  "example": "100"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "6677396cfe1fd29932b058f5"
                },
                "_id": {
                  "type": "string",
                  "description": "Object's id",
                  "example": "6677396cfe1fd29932b058f5"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Object's id",
                  "example": "2024-06-22T20:51:56.759Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Object's id",
                  "example": "2024-06-22T20:51:56.759Z"
                }
              }
            }
          },
          "waterAmount": {
            "type": "integer",
            "description": "Full amount of water",
            "example": "4000"
          }
        }
      },
      "WaterRecordsByMonthResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "Time",
              "example": "2024-06-22-12:50"
            },
            "amount": {
              "type": "integer",
              "description": "Amount of water",
              "example": "100"
            },
            "owner": {
              "type": "string",
              "description": "Owner's id",
              "example": "6677396cfe1fd29932b058f5"
            },
            "_id": {
              "type": "string",
              "description": "Object's id",
              "example": "6677396cfe1fd29932b058f5"
            },
            "createdAt": {
              "type": "string",
              "description": "Object's id",
              "example": "2024-06-22T20:51:56.759Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Object's id",
              "example": "2024-06-22T20:51:56.759Z"
            }
          }
        }
      },
      "CustomersResponse": {
        "type": "integer",
        "example": "15056"
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
